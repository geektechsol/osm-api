{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "\n🚀 **OSM Admin API** - Complete Odoo Server Management Solution\n\n\n## 🔑 Key Features\n\n### 🏗️ **Instance Management**\n- 📦 Install new Odoo instances with custom configurations\n- 🔄 Clone existing instances with addons and data\n- 🗑️ Safely remove instances with database options\n- ⚙️ Manage instance configurations and services\n\n### 👥 **User Management**\n- 👤 Manage Odoo users (create, suspend, delete, password reset)\n- 🔐 Linux system user management\n- 🎭 User impersonation for support\n\n### 🌐 **Domain \u0026 Proxy Management**\n- 🌍 Add/remove custom domains for instances\n- 🔒 SSL certificate management\n- ⚡ Advanced proxy configuration (Nginx/Traefik)\n\n### 💾 **Backup \u0026 Recovery**\n- 💾 Automated backup scheduling\n- 📥 Manual backup creation and download\n- 🔄 Database restoration with target options\n- ⏰ Cron-based automated backups\n\n### 🔧 **Development Tools**\n- 📦 Python package management (pip)\n- 🔗 GitHub addon integration\n- 🔄 Webhook-based automatic updates\n\n### 📊 **Monitoring \u0026 Logs**\n- 📈 System metrics and performance monitoring\n- 📋 Installation and service logs\n- 🔍 PostgreSQL connection monitoring\n\n### 🧩 **Odoo Apps Management**\n- List all Odoo apps (base, custom, GitHub addons) for any Odoo instance\n- Install, upgrade, uninstall, and update the apps list for any instance\n- Filter apps by state (installed, uninstalled, to_upgrade, etc.)\n- See detailed metadata for each app, including dependencies and source\n\n### 🏢 **Multi-Tenant Solution**\n- All endpoints require both a `user` (Linux user/instance owner) and a `website` (project/domain) to uniquely identify the Odoo instance\n- Manage multiple Odoo instances on a single server via a unified API\n\n## 🔐 Authentication\nAll endpoints require an API key for authentication.\nSet the `X-API-Key` header with your API key for all requests.\n\n## 🧪 Testing\nYou can try out endpoints directly from this docs page.\nUse the scheme selector to switch between HTTP and HTTPS as needed.\n\n## 📚 Documentation\nEach endpoint includes detailed parameter descriptions and response examples.\nRequired fields are clearly marked, and optional fields are explained.",
        "title": "OSM Admin API by GTS",
        "contact": {},
        "version": "1.0.2"
    },
    "paths": {
        "/api/apps": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Lists all installed Odoo apps for a given user and website using Odoo shell. Requires user and website.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🧩 Odoo Apps"
                ],
                "summary": "List installed Odoo apps",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux user name (e.g. odoo user)",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/project URL (e.g. example.com)",
                        "name": "website",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by app state (installed, uninstalled, to_upgrade, etc.)",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Show summary only",
                        "name": "summary",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved installed apps",
                        "schema": {
                            "$ref": "#/definitions/apps.ListAppsResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Instance not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server or Odoo shell error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Uninstalls a specific Odoo app for a given user and website using Odoo shell. Requires user, website, and app_name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🧩 Odoo Apps"
                ],
                "summary": "Uninstall an Odoo app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux user name (e.g. odoo user)",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/project URL (e.g. example.com)",
                        "name": "website",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "App/module name to uninstall",
                        "name": "app_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standard response envelope with uninstall result\" example({\"id\":\"123e4567-e89b-12d3-a456-426614174000\",\"timestamp\":\"2024-07-01T12:00:00Z\",\"status\":\"success\",\"message\":\"App uninstall triggered successfully\",\"app\":\"sale_management\",\"output\":\"{...}\"})",
                        "schema": {
                            "$ref": "#/definitions/apps.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Standard error envelope",
                        "schema": {
                            "$ref": "#/definitions/apps.StandardResponse"
                        }
                    },
                    "404": {
                        "description": "Instance not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server or Odoo shell error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/apps/install": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Installs a specific Odoo app for a given user and website using Odoo shell. Requires user, website, and app_name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🧩 Odoo Apps"
                ],
                "summary": "Install an Odoo app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux user name (e.g. odoo user)",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/project URL (e.g. example.com)",
                        "name": "website",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "App/module name to install",
                        "name": "app_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standard response envelope with install result\" example({\"id\":\"123e4567-e89b-12d3-a456-426614174000\",\"timestamp\":\"2024-07-01T12:00:00Z\",\"status\":\"success\",\"message\":\"App install triggered successfully\",\"app\":\"sale_management\",\"output\":\"{...}\"})",
                        "schema": {
                            "$ref": "#/definitions/apps.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Standard error envelope",
                        "schema": {
                            "$ref": "#/definitions/apps.StandardResponse"
                        }
                    },
                    "404": {
                        "description": "Instance not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server or Odoo shell error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/apps/update-list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Triggers a refresh of the available apps list from Odoo for a given user and website using Odoo shell. Requires user and website.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🧩 Odoo Apps"
                ],
                "summary": "Refresh available Odoo apps list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux user name (e.g. odoo user)",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/project URL (e.g. example.com)",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standard response envelope with update result\" example({\"id\":\"123e4567-e89b-12d3-a456-426614174000\",\"timestamp\":\"2024-07-01T12:00:00Z\",\"status\":\"success\",\"message\":\"Apps list update triggered successfully\",\"output\":\"{...}\"})",
                        "schema": {
                            "$ref": "#/definitions/apps.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Standard error envelope",
                        "schema": {
                            "$ref": "#/definitions/apps.StandardResponse"
                        }
                    },
                    "404": {
                        "description": "Instance not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server or Odoo shell error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/apps/upgrade": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Triggers an upgrade for a specific Odoo app on a given user and website using Odoo shell. Requires user, website, and app_name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🧩 Odoo Apps"
                ],
                "summary": "Upgrade an Odoo app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux user name (e.g. odoo user)",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/project URL (e.g. example.com)",
                        "name": "website",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "App/module name to upgrade",
                        "name": "app_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standard response envelope with upgrade result\" example({\"id\":\"123e4567-e89b-12d3-a456-426614174000\",\"timestamp\":\"2024-07-01T12:00:00Z\",\"status\":\"success\",\"message\":\"App upgrade triggered successfully\",\"app\":\"sale_management\",\"output\":\"{...}\"})",
                        "schema": {
                            "$ref": "#/definitions/apps.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Standard error envelope\" example({\"id\":\"123e4567-e89b-12d3-a456-426614174000\",\"timestamp\":\"2024-07-01T12:00:00Z\",\"status\":\"error\",\"message\":\"Missing user, website, or app_name parameter\"})",
                        "schema": {
                            "$ref": "#/definitions/apps.StandardResponse"
                        }
                    },
                    "404": {
                        "description": "Instance not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server or Odoo shell error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/backups/configure_global_s3": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 Configure global S3 remote backup for all instances\n\n**What this does:**\n- Sets up global S3 remote backup configuration\n- Applies to all instances unless overridden by user/instance config\n- Configures bucket, credentials, and retention settings\n\n**Use cases:**\n- Set up organization-wide cloud backup storage\n- Configure company-wide disaster recovery\n- Enable global backup policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 Configure global S3 remote backup",
                "parameters": [
                    {
                        "description": "S3 backup configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.S3BackupConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully configured global S3 remote backup",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters or configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/configure_global_sftp": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 Configure global SFTP remote backup for all instances\n\n**What this does:**\n- Sets up global SFTP remote backup configuration\n- Applies to all instances unless overridden by user/instance config\n- Configures server, credentials, and retention settings\n\n**Use cases:**\n- Set up organization-wide remote server backup storage\n- Configure company-wide secure off-site backups\n- Enable global backup policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 Configure global SFTP remote backup",
                "parameters": [
                    {
                        "description": "SFTP backup configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.SFTPBackupConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully configured global SFTP remote backup",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters or configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/configure_s3": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 Configure S3 remote backup for an Odoo instance\n\n**What this does:**\n- Sets up S3 remote backup configuration\n- Configures bucket, credentials, and retention settings\n- Enables automatic upload of backups to S3\n\n**Configuration options:**\n- Bucket name and region\n- Access key and secret key\n- Optional custom endpoint (for S3-compatible services)\n- Retention period and encryption settings\n\n**Use cases:**\n- Set up cloud backup storage\n- Configure disaster recovery\n- Enable off-site backup replication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 Configure S3 remote backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name",
                        "name": "website",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "S3 backup configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.S3BackupConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully configured S3 remote backup",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters or configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/configure_sftp": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 Configure SFTP remote backup for an Odoo instance\n\n**What this does:**\n- Sets up SFTP remote backup configuration\n- Configures server, credentials, and retention settings\n- Enables automatic upload of backups to SFTP server\n\n**Configuration options:**\n- SFTP server host and port\n- Username and password or private key\n- Remote directory path\n- Retention period settings\n\n**Use cases:**\n- Set up remote server backup storage\n- Configure secure off-site backups\n- Enable backup replication to remote servers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 Configure SFTP remote backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name",
                        "name": "website",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "SFTP backup configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.SFTPBackupConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully configured SFTP remote backup",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters or configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/configure_user_s3": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 Configure S3 remote backup for a specific user's instances\n\n**What this does:**\n- Sets up user-scoped S3 remote backup configuration\n- Applies to all instances of the specified user\n- Overrides global config for this user\n\n**Use cases:**\n- Set up user-specific cloud backup storage\n- Configure user-specific disaster recovery\n- Override global backup policy for specific users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 Configure user S3 remote backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "S3 backup configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.S3BackupConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully configured user S3 remote backup",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters or configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/configure_user_sftp": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 Configure SFTP remote backup for a specific user's instances\n\n**What this does:**\n- Sets up user-scoped SFTP remote backup configuration\n- Applies to all instances of the specified user\n- Overrides global config for this user\n\n**Use cases:**\n- Set up user-specific remote server backup storage\n- Configure user-specific secure off-site backups\n- Override global backup policy for specific users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 Configure user SFTP remote backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "SFTP backup configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.SFTPBackupConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully configured user SFTP remote backup",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters or configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "💾 Create a new backup of an Odoo instance\n\n**What this does:**\n- Creates a complete backup of the specified Odoo instance\n- Includes database, filestore, and configuration files\n- Can be immediate or scheduled for later execution\n- Optionally sets up automated backup scheduling\n\n**Backup types:**\n- Immediate: Creates backup right away\n- Scheduled: Sets up cron job for automated backups\n- Manual: One-time backup without scheduling\n\n**Use cases:**\n- Pre-upgrade safety backup\n- Disaster recovery preparation\n- Data migration preparation\n- Compliance requirements\n\n**⚠️ Warning:** Large instances may take significant time to backup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "💾 Create a backup",
                "parameters": [
                    {
                        "description": "Backup creation details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.BackupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Backup creation failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/delete_backup": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🗑️ Permanently remove a backup file\n\n**What this does:**\n- Permanently deletes the specified backup file\n- Frees up storage space\n- Removes backup from the backup index\n- This action is irreversible\n\n**Use cases:**\n- Storage space management\n- Old backup cleanup\n- Compliance requirements\n- Backup rotation\n\n**⚠️ Warning:** This action is permanent and cannot be undone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🗑️ Delete backup",
                "parameters": [
                    {
                        "description": "Backup deletion details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.DeleteBackupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Backup deletion failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/disable_remote": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 Disable remote backup for an Odoo instance\n\n**What this does:**\n- Disables remote backup functionality\n- Keeps local backups intact\n- Removes remote backup configuration\n\n**Use cases:**\n- Stop remote backup uploads\n- Switch to local-only backups\n- Troubleshoot remote backup issues",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 Disable remote backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully disabled remote backup",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/download": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "⬇️ Download a backup file for local storage or transfer\n\n**What this does:**\n- Streams the specified backup file for download\n- Provides direct access to backup files\n- Supports large file downloads with proper streaming\n- Validates file existence before download\n\n**Download options:**\n- Direct download: Streams file to client\n- Resume support: Handles interrupted downloads\n- Progress tracking: Shows download progress\n\n**Use cases:**\n- Offsite backup storage\n- Local backup archives\n- Data migration between servers\n- Compliance requirements\n\n**⚠️ Note:** Large backup files may take time to download",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "📥 Download backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance (e.g., 'myuser')",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name (e.g., 'mycompany.com')",
                        "name": "website",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Backup filename (e.g., 'backup_2024-01-15_10-30-00.zip')",
                        "name": "backup",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup file streamed successfully",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Missing required parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Backup file not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Download failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/get_backups": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "📦 Retrieve backup files for Odoo instances\n\n**What this does:**\n- Lists all available backup files based on filter criteria\n- Supports filtering by user and/or website\n- Returns backup metadata including size, creation date, and status\n\n**Filter options:**\n- No parameters: Returns all backups for all users and instances\n- User only: Returns all backups for all instances of that user\n- User + Website: Returns backups for that specific instance\n\n**Use cases:**\n- Backup inventory management\n- Disaster recovery planning\n- Storage optimization\n- Compliance auditing",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "📦 Get backups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance (e.g., 'myuser')",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name (e.g., 'mycompany.com') - requires user parameter",
                        "name": "website",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved backup list",
                        "schema": {
                            "$ref": "#/definitions/api.BackupsListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error or backup system failure",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/get_effective_remote_config": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 Get the effective remote backup configuration for an instance\n\n**What this does:**\n- Returns the effective remote backup configuration\n- Shows which configuration level is being used (global/user/instance)\n- Implements hierarchy: instance \u003e user \u003e global\n\n**Use cases:**\n- Check which remote backup config is active for an instance\n- Debug remote backup configuration issues\n- Understand configuration inheritance",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 Get effective remote backup configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved effective remote backup configuration",
                        "schema": {
                            "$ref": "#/definitions/backups.EffectiveRemoteConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/get_remote_config": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 Retrieve remote backup configuration for an Odoo instance\n\n**What this does:**\n- Returns current remote backup settings (S3/SFTP)\n- Shows enabled/disabled status and configuration details\n- Includes retention and encryption settings\n\n**Use cases:**\n- Check current remote backup setup\n- Verify configuration before updates\n- Troubleshoot remote backup issues",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 Get remote backup configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved remote backup configuration",
                        "schema": {
                            "$ref": "#/definitions/backups.RemoteBackupConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/list_all_remote_configs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 List all remote backup configurations (global and user-scoped)\n\n**What this does:**\n- Returns all global and user-scoped remote backup configurations\n- Shows configuration hierarchy and inheritance\n- Provides overview of backup policy across the system\n\n**Use cases:**\n- Audit remote backup configurations\n- Understand backup policy across users\n- Plan backup strategy changes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 List all remote backup configurations",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all remote backup configurations",
                        "schema": {
                            "$ref": "#/definitions/backups.AllRemoteConfigsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/restore_backup": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔄 Restore an Odoo instance from a backup file\n\n**What this does:**\n- Restores a complete Odoo instance from a backup file\n- Replaces current database and filestore with backup data\n- Can restore to a new database name if specified\n- Validates backup integrity before restoration\n\n**Restore options:**\n- Overwrite: Replaces existing instance completely\n- New database: Creates new instance with different name\n- Selective: Restore only specific components\n\n**Use cases:**\n- Disaster recovery\n- Testing with production data\n- Data migration between servers\n- Rollback after failed upgrades\n\n**⚠️ Warning:** This will overwrite existing data - ensure you have a backup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔄 Restore backup",
                "parameters": [
                    {
                        "description": "Backup restoration details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.RestoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup restored successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Restore operation failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/schedules": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "📅 Retrieve all backup schedules and their configurations\n\n**What this does:**\n- Lists all configured backup schedules across all instances\n- Shows schedule details including frequency, retention, and status\n- Provides backup statistics and scheduler health information\n- Supports filtering by user and/or website\n\n**Schedule information includes:**\n- Frequency: How often backups are created\n- Retention: How many backups to keep\n- Status: Whether the schedule is active\n- Last/Next run: Execution timing information\n- Backup statistics: Count and total size\n\n**Use cases:**\n- Backup schedule monitoring\n- Capacity planning\n- Compliance auditing\n- System health monitoring\n⏰ List all backup schedules and configurations\n\n**What this does:**\n- Lists all configured backup schedules across all users and instances\n- Shows detailed information about each scheduled backup job\n- Displays backup statistics and configuration settings\n- Supports filtering by user and/or website\n\n**Schedule information includes:**\n- User and website identification\n- Backup frequency and retention settings\n- Job status (running/stopped) and timing\n- Last and next run times\n- Backup count and total storage usage\n- Configuration details and metadata\n\n**Filter options:**\n- No parameters: Returns all schedules for all users\n- User only: Returns all schedules for that user\n- User + Website: Returns schedule for that specific instance\n\n**Use cases:**\n- Backup schedule management\n- System monitoring and health checks\n- Capacity planning and optimization\n- Compliance and audit reporting\n\n**⚠️ Note:** Schedules are managed by the Go-native scheduler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups",
                    "💾 Odoo Backups"
                ],
                "summary": "📋 Get backup schedules",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username to filter schedules (e.g., 'myuser')",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name to filter schedules (e.g., 'mycompany.com') - requires user parameter",
                        "name": "website",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance (e.g., 'myuser')",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name (e.g., 'mycompany.com') - requires user parameter",
                        "name": "website",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved backup schedules",
                        "schema": {
                            "$ref": "#/definitions/api.BackupSchedulesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Server error or scheduler failure",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/schedules/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "⏰ Create a new automated backup schedule\n\n**What this does:**\n- Creates a new automated backup schedule for the specified instance\n- Sets up cron job to run backups at specified intervals\n- Configures backup retention and storage settings\n- Validates schedule parameters before creation\n\n**Schedule options:**\n- Frequency: Daily, weekly, monthly, or custom cron expression\n- Retention: Number of backups to keep (older ones are deleted)\n- Immediate: Whether to create first backup immediately\n- Notification: Email alerts for backup status\n\n**Use cases:**\n- Automated backup setup\n- Disaster recovery planning\n- Compliance requirements\n- System maintenance automation\n\n**⚠️ Note:** Existing schedules for the same instance will be updated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "⏰ Schedule a new backup job",
                "parameters": [
                    {
                        "description": "Backup schedule configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.ScheduleBackupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup schedule created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid schedule configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create schedule",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/schedules/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🗑️ Remove an automated backup schedule\n\n**What this does:**\n- Removes the automated backup schedule for the specified instance\n- Deletes the associated cron job from the system\n- Stops future automated backups for this instance\n- Preserves existing backup files (does not delete backups)\n\n**Deletion process:**\n- Removes cron job entry from system scheduler\n- Cleans up backup configuration files\n- Stops automated backup execution\n- Maintains existing backup history\n\n**What happens after deletion:**\n- No new automated backups will be created\n- Existing backup files remain untouched\n- Manual backups can still be created\n- Schedule can be recreated later if needed\n\n**Use cases:**\n- Discontinue automated backups for decommissioned instances\n- Switch to manual backup strategy\n- Temporary suspension of automated backups\n- System maintenance and cleanup\n\n**⚠️ Warning:** This will stop automated backups - ensure you have a backup strategy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🗑️ Delete backup schedule",
                "parameters": [
                    {
                        "description": "Schedule deletion request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.DeleteScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ScheduleDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete schedule",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/schedules/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "⚙️ Get the current status of the backup scheduler system\n\n**What this does:**\n- Provides real-time status of the backup scheduler service\n- Shows active jobs, scheduler health, and system status\n- Displays configuration and operational metrics\n- Monitors scheduler performance and resource usage\n\n**Status information includes:**\n- Scheduler service status (running/stopped)\n- Total number of active backup jobs\n- Job execution statistics and success rates\n- System resource usage (CPU, memory)\n- Error logs and troubleshooting information\n- Configuration status and health checks\n\n**Scheduler metrics:**\n- Active job count and queue status\n- Last execution times and durations\n- Error rates and failure counts\n- System uptime and reliability metrics\n- Resource consumption patterns\n\n**Use cases:**\n- Scheduler health monitoring\n- Performance optimization\n- Troubleshooting scheduler issues\n- Capacity planning and scaling\n- System maintenance planning\n\n**⚠️ Note:** Status reflects current system state and may change frequently",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "⚙️ Get scheduler status",
                "responses": {
                    "200": {
                        "description": "Scheduler status retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api.SchedulerStatus"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve scheduler status",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/schedules/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "⏰ Update an existing automated backup schedule\n\n**What this does:**\n- Updates an existing automated backup schedule for the specified instance\n- Modifies cron job frequency, retention settings, and other parameters\n- Reconfigures the backup system without losing existing backups\n- Validates new schedule parameters before applying changes\n\n**Updateable parameters:**\n- Frequency: Change backup frequency (daily, weekly, monthly, custom cron)\n- Retention: Modify number of backups to keep\n- Timing: Adjust backup execution time\n- Notification: Update alert settings\n\n**Update process:**\n- Validates new configuration parameters\n- Updates backup configuration file\n- Reconfigures cron job with new settings\n- Preserves existing backup history\n\n**Use cases:**\n- Adjust backup frequency based on data changes\n- Modify retention policy for storage optimization\n- Update backup timing to avoid peak hours\n- Change notification preferences\n\n**⚠️ Note:** Changes take effect immediately for new backups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "✏️ Update existing backup schedule",
                "parameters": [
                    {
                        "description": "Schedule update configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backups.UpdateScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule updated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ScheduleUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid schedule configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update schedule",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/summary": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "📊 Get comprehensive backup summary for an Odoo instance\n\n**What this does:**\n- Provides a comprehensive summary of backup status for a specific instance\n- Shows backup statistics, storage usage, and schedule information\n- Displays recent backup history and success rates\n- Includes storage space analysis and backup health metrics\n\n**Summary information includes:**\n- Total number of backups and their sizes\n- Backup frequency and schedule status\n- Last backup date and success status\n- Storage space usage and available capacity\n- Backup retention policy and cleanup status\n- Error history and troubleshooting information\n\n**Metrics provided:**\n- Backup count and total size\n- Average backup size and duration\n- Success/failure rates\n- Storage efficiency metrics\n- Schedule compliance status\n\n**Use cases:**\n- Backup health monitoring\n- Storage capacity planning\n- Backup policy optimization\n- Compliance reporting\n- Troubleshooting backup issues\n\n**⚠️ Note:** Summary is based on current backup directory contents",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "📊 Get backup summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup summary retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api.BackupSummary"
                        }
                    },
                    "400": {
                        "description": "Missing required parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Instance or backup directory not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve backup summary",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/backups/test_remote_connection": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 Test the connection to remote backup storage\n\n**What this does:**\n- Tests connectivity to S3 bucket or SFTP server\n- Validates credentials and permissions\n- Creates a test file to verify write access\n- Removes the test file after verification\n\n**Use cases:**\n- Verify remote backup configuration\n- Troubleshoot connection issues\n- Test before enabling remote backups",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "💾 Odoo Backups"
                ],
                "summary": "🔧 Test remote backup connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection test successful",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Connection test failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/chatbot/chat": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🤖 Have a natural conversation with the AI assistant to manage your Odoo instances\n\n**What you can do:**\n- Ask the AI to create, start, stop, or manage Odoo instances\n- Install and manage Odoo addons/modules\n- Create and restore backups\n- Analyze logs for errors and get solutions\n- Execute complex multi-step workflows (pipelines)\n- Use natural language - just talk like you would to a person\n- The AI understands context and can handle various ways of expressing requests\n- Get intelligent responses and automatic action execution\n\n**How to chat:**\n- Be conversational: \"Can you create a new Odoo instance for me?\"\n- Be specific: \"Create an instance for user john with website example.com\"\n- Be flexible: \"Make me a test instance with any settings\"\n- Ask questions: \"What instances do I have running?\"\n- Give commands: \"Start the instance for john and example.com\"\n\n**The AI understands:**\n- Different ways of saying the same thing\n- Context and implied information\n- Natural variations in language\n- Flexible parameter formats\n- Complex multi-step workflows (pipelines)\n- Addon installation and management\n- Backup creation and restoration\n- Log analysis and error detection\n\n**Example conversations:**\n- \"Hey, can you set up a new Odoo instance for my company?\"\n- \"I need to start the instance for john and example.com\"\n- \"Can you show me all my running instances?\"\n- \"Create a test instance with any odoo version\"\n- \"Stop the instance for user john\"\n- \"What instances do I have?\"\n- \"Clone the instance for john and example.com\"\n- \"Install sales module for john-example.com\"\n- \"Create a backup for my instance\"\n- \"Analyze logs for errors in john-example.com\"\n- \"Set up complete pipeline: create instance, install modules, create backup, analyze logs\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🤖 AI Chatbot"
                ],
                "summary": "🤖 Chat with AI Assistant",
                "parameters": [
                    {
                        "description": "Chat request with message",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_FaheemAlvii_go-osm-admin-api_api_chatbot.ChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully processed chat request",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to process chat request",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/chatbot/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🤖 Check if the AI assistant is ready to help you\n\n**What you'll get:**\n- Whether the AI is active and ready to chat\n- What the AI can help you with\n- Current capabilities and features\n\n**Use this to:**\n- Verify the AI is working properly\n- See what you can ask the AI to do\n- Check if everything is configured correctly\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🤖 AI Chatbot"
                ],
                "summary": "🤖 Get Chatbot Status",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved chatbot status",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get chatbot status",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/chatbot/test": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🤖 Test if the AI assistant can understand and respond to you\n\n**What this does:**\n- Sends a test message to the AI\n- Checks if the AI can process and respond\n- Verifies everything is working properly\n\n**Use this when:**\n- You want to make sure the AI is working\n- You're having trouble with responses\n- You want to test the connection\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🤖 AI Chatbot"
                ],
                "summary": "🤖 Test AI Connection",
                "responses": {
                    "200": {
                        "description": "Successfully tested AI connection",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to test AI connection",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/domains/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🌐 Add a new domain to an Odoo instance.\n\n**What this does:**\n- Configures a new domain in the proxy manager (Traefik/Nginx)\n- Links the domain to the specified Odoo instance\n- Sets up proxy routing to the instance's HTTP/longpolling ports\n- Optionally enables SSL if supported by the proxy\n\n**Required fields:**\n- `user`: Linux username hosting the Odoo instance (required)\n- `website`: Website/instance name (required)\n- `domain`: Domain name to add (required)\n\n**Example payload:**\n{\n\"user\": \"myuser\",\n\"website\": \"mycompany.com\",\n\"domain\": \"erp.mycompany.com\"\n}\n\n**Use cases:**\n- Add a new public domain for an Odoo instance\n- Enable SSL for a new domain\n- Set up custom subdomains for clients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🌐 Odoo Domains"
                ],
                "summary": "➕ Add domain",
                "parameters": [
                    {
                        "description": "Domain configuration request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domains.DomainRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain added successfully",
                        "schema": {
                            "$ref": "#/definitions/api.DomainOperationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid domain format or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Proxy configuration failed or system error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🌐 Remove a domain from an Odoo instance.\n\n**What this does:**\n- Removes the domain configuration from the proxy manager (Traefik/Nginx)\n- Unlinks the domain from the specified Odoo instance\n- The domain will no longer be accessible through the proxy\n\n**Required fields:**\n- `user`: Linux username hosting the Odoo instance (required)\n- `website`: Website/instance name (required)\n- `domain`: Domain name to remove (required)\n\n**Example payload:**\n{\n\"user\": \"myuser\",\n\"website\": \"mycompany.com\",\n\"domain\": \"erp.mycompany.com\"\n}\n\n**Use cases:**\n- Remove a public domain from an Odoo instance\n- Unlink a subdomain no longer in use\n- Clean up proxy configuration after client offboarding",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🌐 Odoo Domains"
                ],
                "summary": "🗑️ Remove domain",
                "parameters": [
                    {
                        "description": "Domain removal request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domains.DomainRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain removed successfully",
                        "schema": {
                            "$ref": "#/definitions/api.DomainOperationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters or instance not found",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Domain not linked to instance",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Proxy configuration failed or system error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/domains/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🌐 Retrieve all domains configured for Odoo instances.\n\n**What this does:**\n- Lists all proxy domains and their associated Odoo instance information\n- Shows upstream ports, longpolling ports, and proxy host details\n- Optionally filter by user and website to get domains for specific instances\n- Useful for auditing, troubleshooting, and verifying domain routing\n\n**Use cases:**\n- Audit all domains in the system\n- Find which domains are linked to which Odoo instances\n- Troubleshoot proxy routing issues\n- Validate SSL and upstream configuration\n\n**Returned fields:**\n- `domain`: The public domain name (e.g., \"app.mycompany.com\")\n- `upstream_port`: Odoo HTTP port (e.g., 8069)\n- `longpolling_port`: Odoo longpolling port (e.g., 8072)\n- `upstream_host`: Host/IP for upstream (usually 127.0.0.1)\n- `instance_user`: Linux user for the instance\n- `instance_website`: Website/instance name\n- `ssl_enabled`: Whether SSL is enabled for this domain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🌐 Odoo Domains"
                ],
                "summary": "📋 List domains",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"myuser\"",
                        "description": "Filter by Odoo user (optional)",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"mycompany.com\"",
                        "description": "Filter by website URL (optional)",
                        "name": "website",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domains retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api.DomainsListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters (e.g., malformed query)",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error (proxy or config issue)",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/github/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Authenticates with GitHub using a personal access token for the specified user. This enables private repository access and enhanced API limits.\n\n**What this does:**\n- Stores a GitHub personal access token for the user\n- Enables access to private repositories\n- Increases GitHub API rate limits\n- Enables authenticated repository operations\n\n**Use cases:**\n- Accessing private GitHub repositories\n- Increasing API rate limits\n- Enhanced repository operations\n- Multi-user GitHub integration\n\n**Security Note:** Store tokens securely and use minimal required permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📦 Odoo GitHub Addons"
                ],
                "summary": "🔑 GitHub authentication",
                "parameters": [
                    {
                        "description": "GitHub authentication request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.GithubLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GitHub authentication successful",
                        "schema": {
                            "$ref": "#/definitions/api.GitHubAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Authentication failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/github/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes the GitHub authentication token for the specified user, effectively logging out from GitHub integration.\n\n**What this does:**\n- Removes the stored GitHub token for the user\n- Disables private repository access\n- Resets to public repository limits\n- Clears GitHub authentication state\n\n**Use cases:**\n- Logging out from GitHub integration\n- Token rotation and security\n- User account cleanup\n- Authentication reset",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📦 Odoo GitHub Addons"
                ],
                "summary": "🚪 GitHub logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username to logout from GitHub",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GitHub logout successful",
                        "schema": {
                            "$ref": "#/definitions/api.GitHubAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Logout failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/github/repo": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Clones and configures a new GitHub repository for the specified Odoo instance. The repository will be available as an addon in the instance.\n\n**What this does:**\n- Clones the specified GitHub repository to the instance\n- Configures the repository as an Odoo addon\n- Sets up the specified branch for tracking\n- Integrates with the instance's addon path\n\n**Use cases:**\n- Installing custom addons from GitHub\n- Adding third-party modules\n- Development workflow setup\n- Addon deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📦 Odoo GitHub Addons"
                ],
                "summary": "➕ Add GitHub repository",
                "parameters": [
                    {
                        "description": "Repository addition request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.AddRepoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Repository added successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Repository addition failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes a GitHub repository from the specified Odoo instance. This will delete the repository files and remove it from the addon configuration.\n\n**What this does:**\n- Removes the repository files from the instance\n- Deletes the repository from the github-addons directory\n- Removes the addon from Odoo's addon path\n- Cleans up any associated configurations\n\n**Use cases:**\n- Removing unused or deprecated addons\n- Cleaning up development repositories\n- Addon replacement and cleanup\n- System maintenance\n\n**⚠️ Warning:** This action is permanent and cannot be undone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📦 Odoo GitHub Addons"
                ],
                "summary": "🗑️ Delete GitHub repository",
                "parameters": [
                    {
                        "description": "Repository deletion request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.DeleteRepoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Repository deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Repository deletion failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/github/repos": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of all GitHub repositories configured for the specified Odoo instance. Shows repository details including current commit, latest commit, and sync status.\n\n**What this does:**\n- Lists all GitHub repositories in the instance's github-addons directory\n- Shows current and latest commit information\n- Displays how many commits behind the repository is\n- Shows last update timestamp and branch information\n\n**Use cases:**\n- Repository management and monitoring\n- Sync status checking\n- Development workflow oversight\n- Addon version tracking",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📦 Odoo GitHub Addons"
                ],
                "summary": "📦 List GitHub repositories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved repository list",
                        "schema": {
                            "$ref": "#/definitions/api.GitHubReposResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Failed to retrieve repositories",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/github/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the current GitHub authentication status for the specified user, including token validity and available features.\n\n**What this does:**\n- Checks if a GitHub token is configured for the user\n- Validates token authenticity and permissions\n- Shows available GitHub features and limits\n- Provides authentication status information\n\n**Use cases:**\n- Checking GitHub integration status\n- Token validation and troubleshooting\n- Feature availability verification\n- Authentication monitoring",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📦 Odoo GitHub Addons"
                ],
                "summary": "📊 GitHub status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username to check GitHub status for",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GitHub status retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api.GitHubStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Status check failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/github/webhook": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Processes GitHub webhook events for automatic repository synchronization. Supports push, pull request, and other GitHub events.\n\n**What this does:**\n- Receives and validates GitHub webhook payloads\n- Verifies webhook signatures for security\n- Processes different event types (push, pull_request, etc.)\n- Triggers automatic repository synchronization\n\n**Use cases:**\n- Automatic addon updates on code changes\n- Continuous deployment workflows\n- Development workflow automation\n- Repository monitoring and alerts\n\n**Security Note:** Webhook signatures are verified to ensure authenticity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📦 Odoo GitHub Addons"
                ],
                "summary": "🔗 Handle GitHub webhooks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook processed successfully",
                        "schema": {
                            "$ref": "#/definitions/api.GitHubWebhookResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid webhook payload or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid webhook signature or missing secret",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Webhook processing failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/github/webhook/secret": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Configures a webhook secret for a specific repository to enable secure webhook processing.\n\n**What this does:**\n- Stores a webhook secret for the specified repository\n- Enables signature verification for incoming webhooks\n- Ensures webhook authenticity and security\n- Associates the secret with the user/website/repo combination\n\n**Use cases:**\n- Setting up secure webhook endpoints\n- Repository-specific webhook configuration\n- Security hardening for webhook processing\n- Multi-repository webhook management\n\n**Security Note:** Use strong, unique secrets for each repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📦 Odoo GitHub Addons"
                ],
                "summary": "🔐 Set webhook secret",
                "parameters": [
                    {
                        "description": "Webhook secret configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.WebhookSecretRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook secret configured successfully",
                        "schema": {
                            "$ref": "#/definitions/api.GitHubWebhookSecretResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Secret configuration failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes the webhook secret for a specific repository, disabling webhook processing for that repository.\n\n**What this does:**\n- Removes the stored webhook secret for the repository\n- Disables webhook signature verification\n- Stops webhook processing for the repository\n- Cleans up webhook configuration\n\n**Use cases:**\n- Disabling webhook processing for a repository\n- Repository decommissioning\n- Security policy changes\n- Webhook configuration cleanup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📦 Odoo GitHub Addons"
                ],
                "summary": "🗑️ Delete webhook secret",
                "parameters": [
                    {
                        "description": "Webhook secret deletion request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.WebhookSecretDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook secret deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.GitHubWebhookSecretResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Secret deletion failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/instances": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🏢 Retrieve all Odoo instances with their configurations and status\n\n**What this does:**\n- Lists all Odoo instances from the services.json configuration\n- Shows instance status (active, inactive, installing, cloning)\n- Displays configuration details including ports and versions\n- Provides real-time systemd service status\n\n**Instance information includes:**\n- User and website identifiers\n- Odoo version and configuration\n- Port assignments (HTTP and longpolling)\n- Systemd service status\n- Installation/update status\n\n**Use cases:**\n- Instance inventory management\n- System health monitoring\n- Capacity planning\n- Maintenance scheduling",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🏢 Odoo Instances"
                ],
                "summary": "📋 Get all instances",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved instances",
                        "schema": {
                            "$ref": "#/definitions/api.InstancesListResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to read services configuration",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🚀 Install a new Odoo instance with specified configuration\n\n**What this does:**\n- Initiates the installation of a new Odoo instance\n- Downloads and configures Odoo source code\n- Sets up virtual environment and dependencies\n- Configures systemd service for automatic startup\n- Runs installation asynchronously in background\n\n**Installation process:**\n- Downloads Odoo source from specified repository\n- Creates Python virtual environment\n- Installs Python dependencies\n- Configures Odoo settings and database\n- Sets up SSL certificates and proxy configuration\n\n**Use cases:**\n- New client instance setup\n- Development environment creation\n- Testing environment setup\n- Production instance deployment\n\n**⚠️ Note:** Installation runs in background - check status endpoint for progress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🏢 Odoo Instances"
                ],
                "summary": "🚀 Install a new Odoo instance",
                "parameters": [
                    {
                        "description": "Instance installation configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/instance.InstallInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Installation process started",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid installation configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to start installation",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🗑️ Permanently remove an Odoo instance and its data\n\n**What this does:**\n- Completely removes the specified Odoo instance\n- Stops and disables the systemd service\n- Deletes instance files and directories\n- Optionally preserves the database\n- Removes proxy configurations and SSL certificates\n\n**Deletion options:**\n- Complete removal: Deletes everything including database\n- Keep database: Preserves database for potential recovery\n- Clean removal: Removes all associated files and configurations\n\n**Use cases:**\n- Client termination\n- Instance cleanup\n- System maintenance\n- Storage optimization\n\n**⚠️ Warning:** This action is permanent and cannot be undone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🏢 Odoo Instances"
                ],
                "summary": "🗑️ Delete an Odoo instance",
                "parameters": [
                    {
                        "description": "Instance deletion configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/instance.DeleteInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Instance deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid deletion configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete instance",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/instances/actions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "⚙️ Control Odoo instance systemd services (start, stop, restart, etc.)\n\n**What this does:**\n- Controls the systemd service for a specific Odoo instance\n- Supports start, stop, restart, enable, disable, and status actions\n- Provides detailed service status information including resource usage\n- Validates service existence before performing actions\n\n**Supported actions:**\n- `start`: Start the service if not running\n- `stop`: Stop the service gracefully\n- `restart`: Restart the service (stop then start)\n- `enable`: Enable service to start on boot\n- `disable`: Disable service from starting on boot\n- `status`: Get detailed service status and metrics\n\n**Status information includes:**\n- Service state (active, inactive, failed)\n- Process ID (PID) and uptime\n- Memory and CPU usage\n- Auto-start configuration\n- Load state and error information\n\n**Use cases:**\n- Service maintenance and troubleshooting\n- Performance monitoring\n- System administration\n- Emergency service control\n\n**⚠️ Note:** Service actions require appropriate system permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🏢 Odoo Instances"
                ],
                "summary": "⚙️ Control an instance service",
                "parameters": [
                    {
                        "description": "Service control configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/instanceoperations.ServiceActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service action completed successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ServiceActionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid action or service name",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Service control failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/instances/clone": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🧬 Create a new instance by cloning an existing one\n\n**What this does:**\n- Creates a complete copy of an existing Odoo instance\n- Duplicates configuration, addons, and customizations\n- Optionally includes GitHub addons and custom modules\n- Sets up new systemd service and proxy configuration\n- Assigns new ports and database name\n\n**Cloning options:**\n- Full clone: Copies everything including data\n- Structure only: Copies configuration without data\n- Selective: Choose which components to include\n- Custom addons: Include GitHub and custom modules\n\n**Use cases:**\n- Development environment setup\n- Testing with production configuration\n- Client staging environment\n- Backup instance creation\n\n**⚠️ Note:** Cloning large instances may take significant time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🏢 Odoo Instances"
                ],
                "summary": "🧬 Clone an Odoo instance",
                "parameters": [
                    {
                        "description": "Instance cloning configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/instance.CloneInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Instance cloned successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid cloning configuration",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to clone instance",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/instances/config": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "⚙️ Update Odoo instance configuration file with new settings\n\n**What this does:**\n- Updates the configuration file for a specific Odoo instance\n- Replaces the entire configuration content\n- Validates service and configuration file existence\n- Applies changes immediately to the file system\n\n**Configuration updates include:**\n- Database connection parameters\n- Network and port settings\n- Addon and module configurations\n- Logging and debugging options\n- Security and authentication settings\n\n**Important considerations:**\n- Configuration changes may require service restart\n- Backup existing configuration before updates\n- Validate configuration syntax before applying\n- Test changes in development environment first\n\n**Common update scenarios:**\n- Database connection changes\n- Port number modifications\n- Addon path updates\n- Log level adjustments\n- Security parameter updates\n\n**Use cases:**\n- Environment-specific configurations\n- Performance tuning\n- Security hardening\n- Feature enablement/disablement\n\n**⚠️ Warning:** Invalid configurations may break the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🏢 Odoo Instances"
                ],
                "summary": "✏️ Update instance configuration",
                "parameters": [
                    {
                        "description": "Configuration update request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/instanceoperations.ServiceConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration updated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid configuration or service name",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Service or configuration file not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update configuration file",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/instances/config/read": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "⚙️ Retrieve Odoo instance configuration file contents\n\n**What this does:**\n- Reads the configuration file for a specific Odoo instance\n- Returns the complete configuration as text\n- Provides access to Odoo settings and parameters\n- Validates configuration file existence\n\n**Configuration includes:**\n- Database connection settings\n- HTTP and longpolling port configurations\n- Addon paths and module settings\n- Logging and debugging options\n- Security and authentication settings\n\n**Common settings:**\n- `db_host`, `db_port`, `db_user`, `db_password`\n- `http_port`, `longpolling_port`\n- `addons_path`, `data_dir`\n- `log_level`, `log_handler`\n- `admin_passwd`, `secret_key`\n\n**Use cases:**\n- Configuration review and validation\n- Troubleshooting connection issues\n- Security auditing\n- Backup and documentation\n\n**⚠️ Note:** Configuration files may contain sensitive information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🏢 Odoo Instances"
                ],
                "summary": "📄 Get instance configuration",
                "parameters": [
                    {
                        "description": "Configuration retrieval request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/instanceoperations.ServiceConfigReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration file read successfully",
                        "schema": {
                            "$ref": "#/definitions/api.InstanceConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid service name",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Service or configuration file not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to read configuration file",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/instances/details": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns CPU, RAM, uptime, enabled status, and more for the given instance. All responses are wrapped in a standard envelope with id, timestamp, status, message, and data (for success).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🏢 Odoo Instances"
                ],
                "summary": "Get detailed info for a specific instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux user",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/domain",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Standard response envelope with instance details in data field",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Standard error envelope",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Standard error envelope",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Standard error envelope",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/instances/logs": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "📋 Retrieve Odoo instance service logs for debugging and monitoring\n\n**What this does:**\n- Reads the log file for a specific Odoo instance\n- Returns the last 100 lines of log entries\n- Provides real-time access to service logs\n- Validates log file existence and accessibility\n\n**Log information includes:**\n- Application startup and shutdown messages\n- Error messages and stack traces\n- Database connection information\n- Request processing logs\n- Performance and timing information\n\n**Log format:**\n- Timestamped entries with log levels\n- Structured log messages\n- Error codes and descriptions\n- Request IDs for tracing\n\n**Use cases:**\n- Debugging application issues\n- Performance monitoring\n- Error investigation\n- System health monitoring\n\n**⚠️ Note:** Log files may contain sensitive information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🏢 Odoo Instances"
                ],
                "summary": "📋 Get instance service logs",
                "parameters": [
                    {
                        "description": "Log retrieval configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/instanceoperations.ServiceLogsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Log file read successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ServiceLogsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid service name",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Service or log file not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to read log file",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/linux/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "👥 Retrieve all Linux system users (excluding system service accounts)\n\n**What this does:**\n- Lists all human users and application users on the system\n- Filters out system service accounts and restricted users\n- Shows user details including UID, home directory, and shell\n\n**Use cases:**\n- System user audit\n- User management overview\n- Security review\n- Account cleanup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👥 Linux System Users"
                ],
                "summary": "📋 List Linux Users",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user list",
                        "schema": {
                            "$ref": "#/definitions/api.LinuxUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "System error or permission denied",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "✏️ Update an existing Linux user's password and/or shell\n\n**What this does:**\n- Changes the user's password to the new specified password\n- Updates the user's default shell\n- Preserves all other user settings and data\n- Changes take effect immediately\n\n**Use cases:**\n- Password reset requests\n- Shell preference changes\n- Security policy enforcement\n- User account maintenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👥 Linux System Users"
                ],
                "summary": "✏️ Update Linux User",
                "parameters": [
                    {
                        "description": "User update details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/linuxsystemusers.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "User not found or system error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "➕ Create a new Linux system user account\n\n**What this does:**\n- Creates a new user account with specified credentials\n- Optionally creates home directory\n- Sets user shell and password\n- Assigns unique UID and GID\n\n**Use cases:**\n- New employee account creation\n- Application service account setup\n- Development environment setup\n- System administration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👥 Linux System Users"
                ],
                "summary": "➕ Create Linux User",
                "parameters": [
                    {
                        "description": "User creation details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/linuxsystemusers.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "User already exists or system error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🗑️ Permanently remove a Linux system user account\n\n**What this does:**\n- Completely removes the user account from the system\n- Deletes user's home directory and files\n- Removes user from all groups\n- This action is irreversible\n\n**Use cases:**\n- Employee termination\n- Account cleanup\n- System maintenance\n- Security incident response\n\n**⚠️ Warning:** This action is permanent and cannot be undone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👥 Linux System Users"
                ],
                "summary": "🗑️ Delete Linux User",
                "parameters": [
                    {
                        "description": "User deletion details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/linuxsystemusers.DeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "User not found or system error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/logs/clear": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🗑️ Clear installation logs for a specific Odoo instance\n\n**What this does:**\n- Removes the installation log file for a specific instance\n- Frees up disk space by deleting temporary log files\n- Validates log file existence before deletion\n- Provides confirmation of successful log clearing\n\n**When to use:**\n- After successful installation completion\n- To free up disk space\n- To remove outdated installation logs\n- During system cleanup operations\n\n**Important considerations:**\n- This action is irreversible\n- Only clears installation logs, not runtime logs\n- Does not affect the running Odoo instance\n- Logs are automatically cleared after successful installations\n\n**Use cases:**\n- Post-installation cleanup\n- Disk space management\n- System maintenance\n- Troubleshooting reset\n\n**⚠️ Warning:** This action permanently deletes the log file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📋 Odoo Installation Logs"
                ],
                "summary": "🗑️ Clear installation logs",
                "parameters": [
                    {
                        "description": "Log clearing configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logs.LogRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Installation logs cleared successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid instance URL",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Installation logs not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to clear installation logs",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/logs/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🗑️ Delete a specific log file from the system\n\n**What this does:**\n- Removes a specific log file from the logs directory\n- Validates file existence before deletion\n- Provides confirmation of successful deletion\n- Frees up disk space\n\n**Supported log types:**\n- Installation logs (`*_temp_installation.log`)\n- Application runtime logs\n- System service logs\n- Error and debug logs\n- Backup and maintenance logs\n\n**Important considerations:**\n- This action is irreversible\n- Only deletes the specified file\n- Does not affect running services\n- Use with caution for active log files\n\n**Use cases:**\n- Clean up old installation logs\n- Remove outdated log files\n- Free up disk space\n- System maintenance\n- Log rotation management\n\n**⚠️ Warning:** This action permanently deletes the specified log file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📋 Odoo Installation Logs"
                ],
                "summary": "🗑️ Delete a log file",
                "parameters": [
                    {
                        "description": "Log file deletion request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logs.DeleteLogRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Log file deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.LogDeletionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid log file name",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete log file",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/logs/instances": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "📋 Retrieve Odoo instance installation logs for debugging and monitoring\n\n**What this does:**\n- Reads the installation log file for a specific Odoo instance\n- Returns the last 200 lines of installation progress\n- Provides real-time access to installation status and errors\n- Validates log file existence and accessibility\n\n**Installation log information includes:**\n- System requirements verification\n- Package installation progress\n- Database setup and configuration\n- Odoo application installation steps\n- Service configuration and startup\n- Error messages and troubleshooting info\n\n**Log format:**\n- Timestamped installation steps\n- Progress indicators and status messages\n- Error codes and detailed descriptions\n- System command outputs\n\n**Use cases:**\n- Monitor installation progress\n- Debug installation failures\n- Verify installation completion\n- Troubleshoot setup issues\n\n**⚠️ Note:** Installation logs are temporary and may be cleared after successful installation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📋 Odoo Installation Logs"
                ],
                "summary": "📋 Get installation logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Instance URL (e.g., mycompany.com)",
                        "name": "instance_url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Installation logs retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api.InstallationLog"
                        }
                    },
                    "400": {
                        "description": "Invalid instance URL",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Installation logs not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to read installation logs",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/logs/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "📁 List all available log files in the system\n\n**What this does:**\n- Scans the logs directory for all available log files\n- Returns metadata for each log file (name, size, modification date)\n- Provides an overview of all system logs\n- Excludes directories and hidden files\n\n**Log file types include:**\n- Installation logs (`*_temp_installation.log`)\n- Runtime application logs\n- System service logs\n- Error and debug logs\n- Backup and maintenance logs\n\n**File information includes:**\n- Filename with full extension\n- File size in bytes\n- Last modification timestamp\n- File path and location\n\n**Use cases:**\n- Log file inventory and management\n- Disk space monitoring\n- Log rotation planning\n- System maintenance\n- Troubleshooting preparation\n\n**⚠️ Note:** Only lists files, does not read log contents",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📋 Odoo Installation Logs"
                ],
                "summary": "📁 List log files",
                "responses": {
                    "200": {
                        "description": "Log files listed successfully",
                        "schema": {
                            "$ref": "#/definitions/api.LogsListResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to read logs directory",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/metrics/postgres_connections": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🗄️ Retrieve PostgreSQL database connection statistics including current connections, maximum connections, utilization percentage, and RAM consumption. Essential for monitoring database performance, connection pool health, and memory usage. Helps identify connection bottlenecks, capacity issues, and memory constraints.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📊 Server Metrics"
                ],
                "summary": "🗄️ Get PostgreSQL connection metrics",
                "responses": {
                    "200": {
                        "description": "✅ PostgreSQL connection metrics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api.PostgresConnectionMetricsResponse"
                        }
                    },
                    "401": {
                        "description": "❌ Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "❌ Internal server error - Failed to retrieve PostgreSQL metrics",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/metrics/system_metrics": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "📊 Retrieve comprehensive system performance metrics including CPU usage, memory utilization, and storage statistics. Provides real-time data for monitoring server health and resource usage. Useful for capacity planning and performance optimization.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "📊 Server Metrics"
                ],
                "summary": "📊 Get system metrics",
                "responses": {
                    "200": {
                        "description": "✅ System metrics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api.SystemMetricsResponse"
                        }
                    },
                    "401": {
                        "description": "❌ Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "❌ Internal server error - Failed to retrieve metrics",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/piptools/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🐍 Install one or more Python packages in the specified Odoo instance's virtual environment\n\n**What this does:**\n- Downloads and installs packages from PyPI (Python Package Index)\n- Resolves package dependencies automatically\n- Supports version pinning and constraint specifications\n- Validates package compatibility with existing environment\n- Updates package metadata and installation records\n\n**Package specification formats:**\n- `package_name` - Latest available version\n- `package_name==version` - Exact version (e.g., `requests==2.31.0`)\n- `package_name\u003e=version` - Minimum version (e.g., `requests\u003e=2.30.0`)\n- `package_name~=version` - Compatible release (e.g., `requests~=2.31.0`)\n- `package_name!=version` - Exclude specific version\n- `git+https://github.com/user/repo.git` - Install from Git repository\n- `file:///path/to/package.whl` - Install from local wheel file\n\n**Common Odoo addon dependencies:**\n- `reportlab==4.0.4` - PDF generation for reports\n- `openpyxl==3.1.2` - Excel file processing\n- `pandas==2.0.3` - Data analysis and manipulation\n- `matplotlib==3.7.2` - Chart and graph generation\n- `boto3==1.28.0` - AWS SDK for cloud integrations\n- `stripe==6.1.0` - Payment processing integration\n\n**Installation process:**\n- Validates virtual environment accessibility\n- Checks package availability on PyPI\n- Downloads package and dependencies\n- Installs packages in isolated environment\n- Updates pip cache and metadata\n\n**Use cases:**\n- Adding new functionality to Odoo instances\n- Installing custom module dependencies\n- Adding reporting and analytics tools\n- Integrating with external services\n- Installing development and debugging tools\n\n**⚠️ Important:** Some packages may require system-level dependencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🐍 Odoo Python PIP"
                ],
                "summary": "🔧 Install Python packages",
                "parameters": [
                    {
                        "description": "Package installation configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/piptools.PipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Packages installed successfully",
                        "schema": {
                            "$ref": "#/definitions/api.PipOperationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid package specification or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Virtual environment or package not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "409": {
                        "description": "Package version conflict or already installed",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Installation failed - Network or permission error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/piptools/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🐍 Retrieve a comprehensive list of all installed Python packages in the specified Odoo instance's virtual environment\n\n**What this does:**\n- Scans the virtual environment for all installed Python packages\n- Returns packages in standard pip freeze format (package==version)\n- Provides package metadata including version information\n- Validates virtual environment accessibility and structure\n\n**Package information includes:**\n- Package name and exact version\n- Installation path within virtual environment\n- Package dependencies and requirements\n- Installation timestamp and metadata\n\n**Use cases:**\n- Package inventory and audit\n- Dependency analysis and management\n- Version compatibility checking\n- Security vulnerability assessment\n- Environment replication and backup\n\n**Common packages in Odoo environments:**\n- `odoo==17.0.0` - Core Odoo framework\n- `psycopg2-binary==2.9.7` - PostgreSQL adapter\n- `requests==2.31.0` - HTTP library\n- `python-dateutil==2.8.2` - Date utilities\n- `Pillow==10.0.0` - Image processing\n- `lxml==4.9.3` - XML processing\n\n**⚠️ Note:** Virtual environment must exist and be accessible",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🐍 Odoo Python PIP"
                ],
                "summary": "📦 Get installed Python packages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance (e.g., 'myuser', 'john', 'admin')",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website domain or instance name (e.g., 'mycompany.com', 'test.odoo.com')",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved package list",
                        "schema": {
                            "$ref": "#/definitions/api.PipPackageListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters - Missing user or website",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Virtual environment not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Virtual environment inaccessible or corrupted",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/piptools/uninstall": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🐍 Remove one or more Python packages from the specified Odoo instance's virtual environment\n\n**What this does:**\n- Completely removes specified packages from the virtual environment\n- Uninstalls package dependencies that are no longer needed\n- Cleans up package metadata and cache files\n- Updates pip's package index and dependency tree\n- Removes package files and directories\n\n**Uninstallation process:**\n- Validates package existence in environment\n- Checks for dependent packages that may be affected\n- Removes package files and directories\n- Updates pip's internal package database\n- Cleans up orphaned dependencies\n\n**Package specification:**\n- Use exact package names (without version numbers)\n- Case-sensitive package names\n- Multiple packages can be uninstalled simultaneously\n- Dependencies are automatically handled\n\n**Common packages to uninstall:**\n- `requests` - HTTP library (if not needed)\n- `pandas` - Data analysis (if not used)\n- `matplotlib` - Charting library (if not needed)\n- `reportlab` - PDF generation (if not used)\n- `openpyxl` - Excel processing (if not needed)\n- `boto3` - AWS SDK (if not using cloud services)\n\n**Use cases:**\n- Removing unused dependencies\n- Cleaning up after module removal\n- Reducing virtual environment size\n- Resolving package conflicts\n- Security cleanup (removing vulnerable packages)\n- Performance optimization\n\n**⚠️ Warning:** This action is irreversible and may break dependent functionality\n**⚠️ Note:** Core Odoo packages should not be uninstalled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🐍 Odoo Python PIP"
                ],
                "summary": "🗑️ Uninstall Python packages",
                "parameters": [
                    {
                        "description": "Package uninstallation configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/piptools.PipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Packages uninstalled successfully",
                        "schema": {
                            "$ref": "#/definitions/api.PipOperationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid package names or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Virtual environment or package not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "409": {
                        "description": "Package is a dependency of other packages",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Uninstallation failed - Permission or dependency error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/piptools/upgrade": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🐍 Upgrade one or more Python packages to their latest available versions in the specified Odoo instance's virtual environment\n\n**What this does:**\n- Checks for newer versions of specified packages on PyPI\n- Downloads and installs the latest compatible versions\n- Maintains dependency compatibility and constraints\n- Updates package metadata and installation records\n- Preserves existing package configurations and settings\n\n**Upgrade process:**\n- Validates current package installations\n- Checks PyPI for available updates\n- Resolves dependency conflicts and constraints\n- Downloads new package versions\n- Installs updates while preserving data\n- Updates pip cache and package index\n\n**Package specification:**\n- Use package names without version numbers\n- Multiple packages can be upgraded simultaneously\n- Dependencies are automatically upgraded as needed\n- Version constraints are respected during upgrade\n\n**Common packages to upgrade:**\n- `requests` - HTTP library (security updates)\n- `psycopg2-binary` - PostgreSQL adapter (performance)\n- `Pillow` - Image processing (security fixes)\n- `lxml` - XML processing (security updates)\n- `python-dateutil` - Date utilities (bug fixes)\n- `reportlab` - PDF generation (new features)\n\n**Upgrade considerations:**\n- **Security updates:** Critical for vulnerability patches\n- **Bug fixes:** Improves stability and performance\n- **New features:** Adds functionality and capabilities\n- **Compatibility:** May require testing with custom modules\n- **Breaking changes:** Major version updates may break code\n\n**Use cases:**\n- Security vulnerability patching\n- Performance optimization and bug fixes\n- Access to new features and capabilities\n- Maintaining package currency and support\n- Preparing for Odoo version upgrades\n- Compliance with security policies\n\n**⚠️ Important:** Test upgrades in development environment first\n**⚠️ Note:** Some packages may have breaking changes in major versions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🐍 Odoo Python PIP"
                ],
                "summary": "⬆️ Upgrade Python packages",
                "parameters": [
                    {
                        "description": "Package upgrade configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/piptools.PipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Packages upgraded successfully",
                        "schema": {
                            "$ref": "#/definitions/api.PipOperationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid package names or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Virtual environment or package not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "409": {
                        "description": "Package version conflict or dependency issue",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Upgrade failed - Network or compatibility error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/proxy/domains": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Advanced domain route options for proxy engines",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🔧 Advanced Proxy Management"
                ],
                "summary": "📋 List all domains (advanced)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proxyapi.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "➕ Add a new domain or update an existing domain route in the proxy engine. Accepts advanced options for SSL, DNS, and upstream configuration. Use with caution—incorrect settings may break routing.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🔧 Advanced Proxy Management"
                ],
                "summary": "➕ Add or update domain (advanced)",
                "parameters": [
                    {
                        "description": "Domain route options (see model for details)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proxy.DomainRouteOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "✅ Domain added/updated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ProxyOperationResponse"
                        }
                    },
                    "400": {
                        "description": "❌ Bad request - Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "❌ Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "❌ Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/proxy/domains/{domain}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔧 View detailed configuration for a specific domain in the proxy engine. Returns the complete configuration including upstream settings, SSL configuration, and routing rules. Useful for diagnostics and verification.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🔧 Advanced Proxy Management"
                ],
                "summary": "👁️ View domain config (advanced)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain name (e.g. app.mycompany.com)",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "✅ Domain config retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ProxyDomainConfigResponse"
                        }
                    },
                    "400": {
                        "description": "❌ Bad request - Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "❌ Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "❌ Not found - Domain does not exist",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "❌ Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "✏️ Edit an existing domain route in the proxy engine. Allows updating upstream, SSL, and DNS settings. Use with caution—incorrect settings may break routing.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🔧 Advanced Proxy Management"
                ],
                "summary": "✏️ Edit domain (advanced)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain name (e.g. app.mycompany.com)",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Domain route options (see model for details)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proxy.DomainRouteOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "✅ Domain edited successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ProxyOperationResponse"
                        }
                    },
                    "400": {
                        "description": "❌ Bad request - Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "❌ Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "❌ Not found - Domain does not exist",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "❌ Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "❌ Remove a domain route from the proxy engine. This will immediately stop routing traffic for the domain. Use with caution—removal is irreversible.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🔧 Advanced Proxy Management"
                ],
                "summary": "❌ Remove domain (advanced)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain name (e.g. app.mycompany.com)",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "✅ Domain removed successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ProxyOperationResponse"
                        }
                    },
                    "400": {
                        "description": "❌ Bad request - Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "❌ Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "❌ Not found - Domain does not exist",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "❌ Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/proxy/restart": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔄 Restart the proxy server (Nginx/Traefik). Use with caution—this will interrupt all routing for a few seconds.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🔧 Advanced Proxy Management"
                ],
                "summary": "🔄 Restart proxy server",
                "responses": {
                    "200": {
                        "description": "✅ Proxy restarted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ProxyRestartResponse"
                        }
                    },
                    "401": {
                        "description": "❌ Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "❌ Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/proxy/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🟢 Get the current status of the proxy server (e.g., Nginx or Traefik). Returns the proxy engine name and whether it is available.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "🔧 Advanced Proxy Management"
                ],
                "summary": "📊 Get proxy server status",
                "responses": {
                    "200": {
                        "description": "✅ Proxy status retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api.ProxyStatusResponse"
                        }
                    },
                    "401": {
                        "description": "❌ Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "❌ Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "👤 Create a new user account in the specified Odoo instance\n\n**What this does:**\n- Creates a new user with specified credentials\n- Assigns user to default groups (can be extended later)\n- Sets up user profile with email and full name\n\n**Use cases:**\n- New employee onboarding\n- Client user creation\n- Test user setup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👤 Odoo Users"
                ],
                "summary": "👤 Add a new Odoo user",
                "parameters": [
                    {
                        "description": "User creation details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.AddUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Odoo error or user already exists",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/impersonate-token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🎭 Generate a login token for a specific Odoo user. Use this token to log in via the /login_as endpoint.\n\n**What this does:**\n- Generates a secure, time-limited impersonation token for the specified Odoo user\n- Allows support staff or admins to log in as the user without knowing their password\n- Token can be used with the /login_as endpoint to set a valid Odoo session\n\n**Use cases:**\n- Support troubleshooting as a specific user\n- User experience replication\n- Temporary admin access for user accounts\n\n**Security Note:**\n- Tokens are short-lived and single-use\n- Only available to authorized API clients",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👤 Odoo Users"
                ],
                "summary": "🎭 Get impersonation token for Odoo user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance (e.g., 'myuser')",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name (e.g., 'mycompany.com')",
                        "name": "website",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Odoo user login to impersonate (e.g., 'john.doe')",
                        "name": "login",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Impersonation token generated",
                        "schema": {
                            "$ref": "#/definitions/api.OdooImpersonationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "User not found or Odoo error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "📋 Retrieve all Odoo users (active and archived) for a specific instance\n\n**What this does:**\n- Lists all users in the specified Odoo instance\n- Shows both active and archived users\n- Returns user details including login history\n\n**Use cases:**\n- User audit and management\n- Support ticket resolution\n- Instance user overview",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👤 Odoo Users"
                ],
                "summary": "📋 List Odoo users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Linux username hosting the Odoo instance (e.g., 'myuser')",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website/instance name (e.g., 'mycompany.com')",
                        "name": "website",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user list",
                        "schema": {
                            "$ref": "#/definitions/api.OdooUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Server error or Odoo connection failed",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/reset-password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🔑 Reset the password for an existing Odoo user\n\n**What this does:**\n- Changes the user's password to the new specified password\n- Immediately applies the new password\n- User can login with the new password right away\n\n**Use cases:**\n- Password reset requests\n- Security policy enforcement\n- User account recovery\n\n**Security Note:** Choose a strong password and communicate it securely",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👤 Odoo Users"
                ],
                "summary": "🔑 Reset Odoo user password",
                "parameters": [
                    {
                        "description": "Password reset details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "User not found or Odoo error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/suspend": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "⏸️ Temporarily deactivate an Odoo user account\n\n**What this does:**\n- Archives the user account (sets active = false)\n- User cannot login while suspended\n- User data and records are preserved\n- Can be reactivated later using unsuspend endpoint\n\n**Use cases:**\n- Temporary account suspension\n- Employee leave management\n- Security incident response\n- Account maintenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👤 Odoo Users"
                ],
                "summary": "⏸️ Suspend (archive) an Odoo user",
                "parameters": [
                    {
                        "description": "User suspension details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UserActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User suspended successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "User not found or Odoo error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/unsuspend": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "▶️ Reactivate a previously suspended Odoo user account\n\n**What this does:**\n- Unarchives the user account (sets active = true)\n- User can login again immediately\n- All user data and records are restored\n- User permissions and settings remain unchanged\n\n**Use cases:**\n- Employee return from leave\n- Account reactivation after security review\n- Temporary suspension reversal\n- User account restoration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👤 Odoo Users"
                ],
                "summary": "▶️ Unsuspend (unarchive) an Odoo user",
                "parameters": [
                    {
                        "description": "User reactivation details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UserActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User reactivated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "User not found or Odoo error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/user": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "🗑️ Permanently remove an Odoo user account\n\n**What this does:**\n- Completely removes the user from the Odoo instance\n- Deletes all user-related records and data\n- This action is irreversible\n- User's created records may be affected\n\n**Use cases:**\n- Employee termination\n- Account cleanup\n- Test user removal\n- System maintenance\n\n**⚠️ Warning:** This action is permanent and cannot be undone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "👤 Odoo Users"
                ],
                "summary": "🗑️ Delete an Odoo user",
                "parameters": [
                    {
                        "description": "User deletion details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UserActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "User not found or Odoo error",
                        "schema": {
                            "$ref": "#/definitions/api.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "🏥 Verifies that the API server is running and accessible\n\n**What this does:**\n- Checks if the API server is responding\n- Returns server version and environment information\n- Provides basic server status and health metrics\n\n**Use cases:**\n- Load balancer health checks\n- Monitoring system integration\n- Server status verification\n- API availability testing",
                "tags": [
                    "🏥 Health"
                ],
                "summary": "🏥 Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/login_as": {
            "get": {
                "description": "Log in to an Odoo instance using a login token. This endpoint sets a cookie and redirects to the specified URL.",
                "tags": [
                    "🎭 Impersonation"
                ],
                "summary": "🎭 Login as Odoo User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Login token for Odoo authentication",
                        "name": "login_token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Redirect URL after login (defaults to '/')",
                        "name": "redirect",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to target URL with session cookie set",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "No login_token provided",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.BackupMetadata": {
            "type": "object",
            "properties": {
                "backup_type": {
                    "type": "string",
                    "example": "manual"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "filename": {
                    "type": "string",
                    "example": "backup_2024-01-15_10-30-00.zip"
                },
                "size": {
                    "type": "integer",
                    "example": 1048576
                },
                "status": {
                    "type": "string",
                    "example": "completed"
                },
                "user": {
                    "type": "string",
                    "example": "myuser"
                },
                "website": {
                    "type": "string",
                    "example": "mycompany.com"
                }
            }
        },
        "api.BackupScheduleJob": {
            "type": "object",
            "properties": {
                "backup_count": {
                    "type": "integer",
                    "example": 5
                },
                "config": {
                    "type": "object",
                    "properties": {
                        "created_at": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00Z"
                        },
                        "frequency": {
                            "type": "string",
                            "example": "daily"
                        },
                        "keep_backups": {
                            "type": "integer",
                            "example": 7
                        },
                        "last_backup": {
                            "type": "string",
                            "example": "2024-01-15T02:00:00Z"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2024-01-15T02:00:00Z"
                        }
                    }
                },
                "frequency": {
                    "type": "string",
                    "example": "daily"
                },
                "keep_backups": {
                    "type": "integer",
                    "example": 7
                },
                "last_run": {
                    "type": "string",
                    "example": "2024-01-15T02:00:00Z"
                },
                "next_run": {
                    "type": "string",
                    "example": "2024-01-16T02:00:00Z"
                },
                "running": {
                    "type": "boolean",
                    "example": false
                },
                "total_size_mb": {
                    "type": "number",
                    "example": 1024.5
                },
                "user": {
                    "type": "string",
                    "example": "myuser"
                },
                "website": {
                    "type": "string",
                    "example": "mycompany.com"
                }
            }
        },
        "api.BackupSchedulesData": {
            "type": "object",
            "properties": {
                "filters_applied": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "string",
                            "example": "myuser"
                        },
                        "website": {
                            "type": "string",
                            "example": "mycompany.com"
                        }
                    }
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.BackupScheduleJob"
                    }
                },
                "scheduler": {
                    "type": "object",
                    "properties": {
                        "running": {
                            "type": "boolean",
                            "example": true
                        },
                        "total_jobs": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                },
                "total_jobs": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "api.BackupSchedulesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.BackupSchedulesData"
                },
                "message": {
                    "type": "string",
                    "example": "Schedules and configurations retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.BackupSummary": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.BackupSummaryData"
                },
                "message": {
                    "type": "string",
                    "example": "Backup summary retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.BackupSummaryData": {
            "type": "object",
            "properties": {
                "backups": {},
                "config": {},
                "cron_enabled": {
                    "type": "boolean",
                    "example": true
                },
                "cron_schedule": {
                    "type": "string",
                    "example": "daily"
                },
                "latest_backup": {
                    "type": "object",
                    "properties": {
                        "created_at": {
                            "type": "string",
                            "example": "2024-01-15T02:00:00Z"
                        },
                        "filename": {
                            "type": "string",
                            "example": "mycompany.com_20240115_020000.zip"
                        },
                        "size": {
                            "type": "integer",
                            "example": 104857600
                        }
                    }
                }
            }
        },
        "api.BackupsListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.BackupMetadata"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Backups retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.BadRequestResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ErrorDetail"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.CronResultData": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "updated"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "Backup job scheduled successfully for daily"
                },
                "schedule": {
                    "type": "string",
                    "example": "daily (Go scheduler)"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api.DomainInfo": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string",
                    "example": "mycompany.com"
                },
                "instance_user": {
                    "type": "string",
                    "example": "myuser"
                },
                "instance_website": {
                    "type": "string",
                    "example": "mycompany.com"
                },
                "longpolling_port": {
                    "type": "integer",
                    "example": 8072
                },
                "ssl_enabled": {
                    "type": "boolean",
                    "example": true
                },
                "upstream_host": {
                    "type": "string",
                    "example": "127.0.0.1"
                },
                "upstream_port": {
                    "type": "integer",
                    "example": 8069
                }
            }
        },
        "api.DomainOperationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Domain operation completed successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.DomainsListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.DomainInfo"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Domains retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "VALIDATION_ERROR"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "source": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ErrorDetail"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Validation error"
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.GitHubAuthResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "GitHub authentication successful"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.GitHubRepo": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string",
                    "example": "main"
                },
                "commits_behind": {
                    "type": "integer",
                    "example": 3
                },
                "current_commit": {
                    "type": "string",
                    "example": "a1b2c3d"
                },
                "last_updated": {
                    "type": "string",
                    "example": "2024-01-15 10:30:00"
                },
                "latest_commit": {
                    "type": "string",
                    "example": "e4f5g6h"
                },
                "name": {
                    "type": "string",
                    "example": "my-addon"
                },
                "url": {
                    "type": "string",
                    "example": "https://github.com/mycompany/my-addon.git"
                }
            }
        },
        "api.GitHubReposResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.GitHubRepo"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Repositories retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.GitHubStatusData": {
            "type": "object",
            "properties": {
                "authenticated": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api.GitHubStatusResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.GitHubStatusData"
                },
                "message": {
                    "type": "string",
                    "example": "GitHub token configured"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.GitHubWebhookData": {
            "type": "object",
            "properties": {
                "after": {
                    "type": "string",
                    "example": "e4f5g6h"
                },
                "before": {
                    "type": "string",
                    "example": "a1b2c3d"
                },
                "event_type": {
                    "type": "string",
                    "example": "push"
                },
                "ref": {
                    "type": "string",
                    "example": "refs/heads/main"
                },
                "repository": {
                    "type": "string",
                    "example": "mycompany/my-addon"
                }
            }
        },
        "api.GitHubWebhookResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.GitHubWebhookData"
                },
                "message": {
                    "type": "string",
                    "example": "Webhook processed successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.GitHubWebhookSecretResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Webhook secret configured successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.InstallationLog": {
            "type": "object",
            "properties": {
                "full_log_path": {
                    "type": "string",
                    "example": "/path/to/logs/mycompany.com_temp_installation.log"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.InstanceConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "Configuration file read successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.InstanceInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "info@mycompany.com"
                },
                "longpolling_port": {
                    "type": "integer",
                    "example": 8072
                },
                "odoo_port": {
                    "type": "integer",
                    "example": 8069
                },
                "odoo_version": {
                    "type": "string",
                    "example": "17.0"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "user": {
                    "type": "string",
                    "example": "myuser"
                },
                "website": {
                    "type": "string",
                    "example": "mycompany.com"
                }
            }
        },
        "api.InstancesListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/api.InstanceInfo"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Instances retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.LinuxUser": {
            "type": "object",
            "properties": {
                "gid": {
                    "type": "string",
                    "example": "1001"
                },
                "home": {
                    "type": "string",
                    "example": "/home/john"
                },
                "shell": {
                    "type": "string",
                    "example": "/bin/bash"
                },
                "uid": {
                    "type": "string",
                    "example": "1001"
                },
                "username": {
                    "type": "string",
                    "example": "john"
                }
            }
        },
        "api.LinuxUsersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.LinuxUser"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Linux users listed"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.LogDeletionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "type": "string",
                    "example": "Log deleted successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.LogFileInfo": {
            "type": "object",
            "properties": {
                "modified": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "name": {
                    "type": "string",
                    "example": "mycompany.com_temp_installation.log"
                },
                "size": {
                    "type": "integer",
                    "example": 1048576
                }
            }
        },
        "api.LogsListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.LogFileInfo"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Logs listed successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.NotFoundResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Resource not found"
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.OdooImpersonationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.OdooImpersonationSession"
                },
                "message": {
                    "type": "string",
                    "example": "Impersonation successful"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.OdooImpersonationSession": {
            "type": "object",
            "properties": {
                "login_token": {
                    "type": "string",
                    "example": "abc123def456ghi789"
                }
            }
        },
        "api.OdooUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 2
                },
                "last_login": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00"
                },
                "login": {
                    "type": "string",
                    "example": "admin"
                },
                "name": {
                    "type": "string",
                    "example": "Administrator"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "api.OdooUsersList": {
            "type": "object",
            "properties": {
                "active_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.OdooUser"
                    }
                },
                "archived_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.OdooUser"
                    }
                }
            }
        },
        "api.OdooUsersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.OdooUsersList"
                },
                "message": {
                    "type": "string",
                    "example": "Users listed"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.PipOperationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "null"
                },
                "message": {
                    "type": "string",
                    "example": "Packages installed successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "req_123456789"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api.PipPackageListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['odoo==16.0.1.0.0'",
                        "'requests==2.31.0'",
                        "'python-dateutil==2.8.2']"
                    ]
                },
                "message": {
                    "type": "string",
                    "example": "Packages listed successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "req_123456789"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api.PostgresConnectionMetrics": {
            "type": "object",
            "properties": {
                "connection_utilization": {
                    "type": "number",
                    "example": 25
                },
                "current_connections": {
                    "type": "integer",
                    "example": 25
                },
                "max_connections": {
                    "type": "integer",
                    "example": 100
                },
                "ram_consumption": {
                    "type": "number",
                    "example": 512.5
                }
            }
        },
        "api.PostgresConnectionMetricsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.PostgresConnectionMetrics"
                },
                "message": {
                    "type": "string",
                    "example": "PostgreSQL connection metrics retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.ProxyDomainConfigResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "config": {
                            "type": "string",
                            "example": "server { ... }"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Domain config retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.ProxyOperationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Domain added/updated/removed successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.ProxyRestartResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Proxy restarted successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.ProxyStatusResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "available": {
                            "type": "boolean",
                            "example": true
                        },
                        "proxy": {
                            "type": "string",
                            "example": "nginx"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Proxy status retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.ScheduleDeleteResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.CronResultData"
                },
                "message": {
                    "type": "string",
                    "example": "Schedule deleted successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.ScheduleUpdateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.CronResultData"
                },
                "message": {
                    "type": "string",
                    "example": "Schedule updated successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.SchedulerJobInfo": {
            "type": "object",
            "properties": {
                "frequency": {
                    "type": "string",
                    "example": "daily"
                },
                "keep_backups": {
                    "type": "integer",
                    "example": 7
                },
                "last_run": {
                    "type": "string",
                    "example": "2024-01-15T02:00:00Z"
                },
                "next_run": {
                    "type": "string",
                    "example": "2024-01-16T02:00:00Z"
                },
                "running": {
                    "type": "boolean",
                    "example": false
                },
                "user": {
                    "type": "string",
                    "example": "myuser"
                },
                "website": {
                    "type": "string",
                    "example": "mycompany.com"
                }
            }
        },
        "api.SchedulerStatus": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.SchedulerStatusData"
                },
                "message": {
                    "type": "string",
                    "example": "Scheduler status retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.SchedulerStatusData": {
            "type": "object",
            "properties": {
                "job_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SchedulerJobInfo"
                    }
                },
                "jobs": {
                    "type": "integer",
                    "example": 3
                },
                "running": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api.ServiceActionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "type": "string",
                    "example": "Service action completed"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.ServiceLogsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Log file read successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.StandardResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Operation successful"
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.SystemMetrics": {
            "type": "object",
            "properties": {
                "avg_cpu_usage": {
                    "type": "number",
                    "example": 12
                },
                "cpu_count": {
                    "type": "integer",
                    "example": 8
                },
                "cpu_usage": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "free_ram": {
                    "type": "number",
                    "example": 7.5
                },
                "free_storage": {
                    "type": "string",
                    "example": "249.50 GB"
                },
                "total_ram": {
                    "type": "number",
                    "example": 16
                },
                "total_storage": {
                    "type": "string",
                    "example": "500.00 GB"
                },
                "used_ram": {
                    "type": "number",
                    "example": 8.5
                },
                "used_storage": {
                    "type": "string",
                    "example": "250.50 GB"
                }
            }
        },
        "api.SystemMetricsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.SystemMetrics"
                },
                "message": {
                    "type": "string",
                    "example": "System metrics retrieved successfully"
                },
                "request_id": {
                    "type": "string",
                    "example": "abc123-def456"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "api.UnauthorizedResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Unauthorized - Invalid API key"
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "apps.ListAppsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.OdooApp"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "apps.OdooApp": {
            "type": "object",
            "properties": {
                "application": {
                    "type": "boolean"
                },
                "author": {
                    "type": "string"
                },
                "auto_install": {
                    "type": "boolean"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.OdooDependency"
                    }
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "description": "Module filesystem path",
                    "type": "string"
                },
                "source": {
                    "description": "'base', 'custom', or 'github'",
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "apps.OdooDependency": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "apps.StandardResponse": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "string",
                    "example": "sale_management"
                },
                "data": {},
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "message": {
                    "type": "string",
                    "example": "App install triggered successfully"
                },
                "output": {
                    "type": "string",
                    "example": "{...}"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-07-01T12:00:00Z"
                }
            }
        },
        "backups.AllRemoteConfigsResponse": {
            "type": "object",
            "properties": {
                "global": {
                    "type": "object",
                    "additionalProperties": true
                },
                "users": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "backups.BackupRequest": {
            "type": "object",
            "required": [
                "user",
                "website"
            ],
            "properties": {
                "frequency": {
                    "description": "daily, weekly, monthly, none",
                    "type": "string"
                },
                "immediate": {
                    "description": "run backup immediately",
                    "type": "boolean"
                },
                "keep_backups": {
                    "description": "number of backups to keep",
                    "type": "integer"
                },
                "setup_cron": {
                    "description": "setup automated backup",
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "backups.DeleteBackupRequest": {
            "type": "object",
            "required": [
                "backup",
                "user",
                "website"
            ],
            "properties": {
                "backup": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "backups.DeleteScheduleRequest": {
            "type": "object",
            "required": [
                "user",
                "website"
            ],
            "properties": {
                "user": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "backups.EffectiveRemoteConfigResponse": {
            "type": "object",
            "properties": {
                "config": {},
                "enabled": {
                    "type": "boolean"
                },
                "scope": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "backups.RemoteBackupConfigResponse": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "s3_config": {
                    "$ref": "#/definitions/backups.S3BackupConfigRequest"
                },
                "scope": {
                    "type": "string"
                },
                "sftp_config": {
                    "$ref": "#/definitions/backups.SFTPBackupConfigRequest"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "backups.RestoreRequest": {
            "type": "object",
            "required": [
                "backup",
                "user",
                "website"
            ],
            "properties": {
                "backup": {
                    "type": "string"
                },
                "target_database": {
                    "description": "optional target database name",
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "backups.S3BackupConfigRequest": {
            "type": "object",
            "required": [
                "access_key",
                "bucket",
                "secret_key"
            ],
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "encryption": {
                    "type": "boolean"
                },
                "endpoint": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "retention": {
                    "type": "integer"
                },
                "secret_key": {
                    "type": "string"
                }
            }
        },
        "backups.SFTPBackupConfigRequest": {
            "type": "object",
            "required": [
                "host",
                "path",
                "username"
            ],
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "private_key": {
                    "type": "string"
                },
                "retention": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "backups.ScheduleBackupRequest": {
            "type": "object",
            "required": [
                "frequency",
                "keep_backups",
                "user",
                "website"
            ],
            "properties": {
                "frequency": {
                    "description": "daily, weekly, monthly, none",
                    "type": "string"
                },
                "keep_backups": {
                    "description": "number of backups to keep",
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "backups.UpdateScheduleRequest": {
            "type": "object",
            "required": [
                "frequency",
                "keep_backups",
                "user",
                "website"
            ],
            "properties": {
                "frequency": {
                    "description": "daily, weekly, monthly, none",
                    "type": "string"
                },
                "keep_backups": {
                    "description": "number of backups to keep",
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "domains.DomainRequest": {
            "type": "object",
            "required": [
                "domain",
                "user",
                "website"
            ],
            "properties": {
                "domain": {
                    "description": "Domain name to add or remove (required)\nExample: \"app.mycompany.com\", \"erp.test.odoo.com\"",
                    "type": "string",
                    "example": "app.mycompany.com"
                },
                "user": {
                    "description": "Linux username hosting the Odoo instance (required)\nExample: \"myuser\", \"john\", \"admin\"",
                    "type": "string",
                    "example": "myuser"
                },
                "website": {
                    "description": "Website domain or instance name (required)\nExample: \"mycompany.com\", \"test.odoo.com\"",
                    "type": "string",
                    "example": "mycompany.com"
                }
            }
        },
        "github.AddRepoRequest": {
            "type": "object",
            "required": [
                "branch",
                "name",
                "repo_url",
                "website"
            ],
            "properties": {
                "branch": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "repo_url": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "github.DeleteRepoRequest": {
            "type": "object",
            "required": [
                "name",
                "repo_name",
                "website"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "repo_name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "github.GithubLoginRequest": {
            "type": "object",
            "required": [
                "name",
                "token"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github.WebhookSecretDeleteRequest": {
            "type": "object",
            "required": [
                "name",
                "repo",
                "website"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "github.WebhookSecretRequest": {
            "type": "object",
            "required": [
                "name",
                "repo",
                "website"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "secret": {
                    "description": "required for set, not for delete",
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "github_com_FaheemAlvii_go-osm-admin-api_api_chatbot.ChatRequest": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "instance.CloneInstanceRequest": {
            "type": "object",
            "required": [
                "destination",
                "source",
                "user"
            ],
            "properties": {
                "destination": {
                    "type": "string"
                },
                "include_custom_addons": {
                    "type": "boolean"
                },
                "include_github_addons": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "instance.DeleteInstanceRequest": {
            "type": "object",
            "required": [
                "user",
                "website"
            ],
            "properties": {
                "user": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "instance.InstallInstanceRequest": {
            "type": "object",
            "required": [
                "instanceName",
                "instanceURL"
            ],
            "properties": {
                "backupSchedule": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "instanceURL": {
                    "type": "string"
                },
                "odooRepoBranch": {
                    "type": "string"
                },
                "odooRepoURL": {
                    "type": "string"
                },
                "odooVersion": {
                    "type": "string"
                },
                "requirementsURL": {
                    "type": "string"
                }
            }
        },
        "instanceoperations.ServiceActionRequest": {
            "type": "object",
            "required": [
                "action",
                "service_name"
            ],
            "properties": {
                "action": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "instanceoperations.ServiceConfigReadRequest": {
            "type": "object",
            "required": [
                "service_name"
            ],
            "properties": {
                "service_name": {
                    "type": "string"
                }
            }
        },
        "instanceoperations.ServiceConfigRequest": {
            "type": "object",
            "required": [
                "config",
                "service_name"
            ],
            "properties": {
                "config": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "instanceoperations.ServiceLogsRequest": {
            "type": "object",
            "required": [
                "service_name"
            ],
            "properties": {
                "service_name": {
                    "type": "string"
                }
            }
        },
        "linuxsystemusers.CreateUserRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "create_home": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "shell": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "linuxsystemusers.DeleteUserRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "remove_home": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "linuxsystemusers.UpdateUserRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "new_username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "shell": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "logs.DeleteLogRequest": {
            "type": "object",
            "required": [
                "log"
            ],
            "properties": {
                "log": {
                    "description": "Log file name to delete (e.g., \"mycompany.com_temp_installation.log\")",
                    "type": "string",
                    "example": "mycompany.com_temp_installation.log"
                }
            }
        },
        "logs.LogRequest": {
            "type": "object",
            "required": [
                "instance_url"
            ],
            "properties": {
                "instance_url": {
                    "description": "Instance URL for log operations (e.g., \"mycompany.com\")",
                    "type": "string",
                    "example": "mycompany.com"
                }
            }
        },
        "piptools.PipRequest": {
            "type": "object",
            "required": [
                "user",
                "website"
            ],
            "properties": {
                "packages": {
                    "description": "List of Python packages to operate on (required for install/uninstall/upgrade)\nFor install: Can include version specifications (e.g., \"requests==2.31.0\")\nFor uninstall/upgrade: Use package names only (e.g., \"requests\")\nExample: [\"requests==2.31.0\", \"python-dateutil==2.8.2\", \"reportlab\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "requests==2.31.0",
                        "python-dateutil==2.8.2",
                        "reportlab"
                    ]
                },
                "user": {
                    "description": "Linux username hosting the Odoo instance (required)\nExample: \"myuser\", \"john\", \"admin\"",
                    "type": "string",
                    "example": "myuser"
                },
                "website": {
                    "description": "Website domain or instance name (required)\nExample: \"mycompany.com\", \"test.odoo.com\"",
                    "type": "string",
                    "example": "mycompany.com"
                }
            }
        },
        "proxy.DomainRouteOptions": {
            "type": "object",
            "properties": {
                "dnscredentials": {
                    "description": "path to DNS credentials file",
                    "type": "string"
                },
                "dnsprovider": {
                    "description": "for Nginx/certbot DNS challenge",
                    "type": "string"
                },
                "domain": {
                    "description": "e.g. example.com",
                    "type": "string"
                },
                "email": {
                    "description": "for Let's Encrypt/ACME",
                    "type": "string"
                },
                "force": {
                    "description": "force removal, skip confirmation",
                    "type": "boolean"
                },
                "longpollingPort": {
                    "description": "e.g. 8072",
                    "type": "integer"
                },
                "sslenabled": {
                    "description": "true to enable SSL",
                    "type": "boolean"
                },
                "upstreamHost": {
                    "description": "e.g. 127.0.0.1",
                    "type": "string"
                },
                "upstreamPort": {
                    "description": "e.g. 8069",
                    "type": "integer"
                }
            }
        },
        "proxyapi.APIResponse": {
            "description": "Standard API response",
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "users.AddUserRequest": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "user",
                "website"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "users.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "login",
                "user",
                "website"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "users.UserActionRequest": {
            "type": "object",
            "required": [
                "login",
                "user",
                "website"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}
